import numpy as np

COLORS = np.array(
    [
        0.000, 0.447, 0.741,
        0.850, 0.325, 0.098,
        0.929, 0.694, 0.125,
        0.494, 0.184, 0.556,
        0.466, 0.674, 0.188,
        0.301, 0.745, 0.933,
        0.635, 0.078, 0.184,
        0.300, 0.300, 0.300,
        0.600, 0.600, 0.600,
        1.000, 0.000, 0.000,
        1.000, 0.500, 0.000,
        0.749, 0.749, 0.000,
        0.000, 1.000, 0.000,
        0.000, 0.000, 1.000,
        0.667, 0.000, 1.000,
        0.333, 0.333, 0.000,
        0.333, 0.667, 0.000,
        0.333, 1.000, 0.000,
        0.667, 0.333, 0.000,
        0.667, 0.667, 0.000,
        0.667, 1.000, 0.000,
        1.000, 0.333, 0.000,
        1.000, 0.667, 0.000,
        1.000, 1.000, 0.000,
        0.000, 0.333, 0.500,
        0.000, 0.667, 0.500,
        0.000, 1.000, 0.500,
        0.333, 0.000, 0.500,
        0.333, 0.333, 0.500,
        0.333, 0.667, 0.500,
        0.333, 1.000, 0.500,
        0.667, 0.000, 0.500,
        0.667, 0.333, 0.500,
        0.667, 0.667, 0.500,
        0.667, 1.000, 0.500,
        1.000, 0.000, 0.500,
        1.000, 0.333, 0.500,
        1.000, 0.667, 0.500,
        1.000, 1.000, 0.500,
        0.000, 0.333, 1.000,
        0.000, 0.667, 1.000,
        0.000, 1.000, 1.000,
        0.333, 0.000, 1.000,
        0.333, 0.333, 1.000,
        0.333, 0.667, 1.000,
        0.333, 1.000, 1.000,
        0.667, 0.000, 1.000,
        0.667, 0.333, 1.000,
        0.667, 0.667, 1.000,
        0.667, 1.000, 1.000,
        1.000, 0.000, 1.000,
        1.000, 0.333, 1.000,
        1.000, 0.667, 1.000,
        0.333, 0.000, 0.000,
        0.500, 0.000, 0.000,
        0.667, 0.000, 0.000,
        0.833, 0.000, 0.000,
        1.000, 0.000, 0.000,
        0.000, 0.167, 0.000,
        0.000, 0.333, 0.000,
        0.000, 0.500, 0.000,
        0.000, 0.667, 0.000,
        0.000, 0.833, 0.000,
        0.000, 1.000, 0.000,
        0.000, 0.000, 0.167,
        0.000, 0.000, 0.333,
        0.000, 0.000, 0.500,
        0.000, 0.000, 0.667,
        0.000, 0.000, 0.833,
        0.000, 0.000, 1.000,
        0.000, 0.000, 0.000,
        0.143, 0.143, 0.143,
        0.286, 0.286, 0.286,
        0.429, 0.429, 0.429,
        0.571, 0.571, 0.571,
        0.714, 0.714, 0.714,
        0.857, 0.857, 0.857,
        1.000, 1.000, 1.000,
        0.909, 0.921, 0.543,
        0.026, 0.515, 0.972,
        0.883, 0.541, 0.932,
        0.670, 0.942, 0.879,
        0.175, 0.908, 0.995,
        0.703, 0.556, 0.918,
        0.164, 0.924, 0.036,
        0.719, 0.473, 0.070,
        0.410, 0.608, 0.389,
        0.115, 0.162, 0.684,
        0.378, 0.710, 0.383,
        0.006, 0.398, 0.926,
        0.553, 0.334, 0.367,
        0.635, 0.070, 0.750,
        0.205, 0.808, 0.931,
        0.784, 0.386, 0.197,
        0.342, 0.485, 0.546,
        0.654, 0.982, 0.482,
        0.185, 0.369, 0.773,
        0.684, 0.532, 0.545,
        0.243, 0.321, 0.357,
        0.211, 0.256, 0.280,
        0.893, 0.203, 0.484,
        0.689, 0.923, 0.765,
        0.130, 0.111, 0.962,
        0.255, 0.548, 0.048,
        0.412, 0.611, 0.992,
        0.707, 0.911, 0.904,
        0.504, 0.108, 0.412,
        0.782, 0.448, 0.222,
        0.046, 0.231, 0.562,
        0.881, 0.241, 0.632,
        0.891, 0.779, 0.247,
        0.939, 0.680, 0.754,
        0.686, 0.417, 0.600,
        0.577, 0.450, 0.282,
        0.712, 0.484, 0.866,
        0.906, 0.469, 0.591,
        0.500, 0.893, 0.570,
        0.774, 0.564, 0.731,
        0.780, 0.614, 0.875,
        0.057, 0.747, 0.323,
        0.150, 0.384, 0.158,
        0.519, 0.780, 0.584,
        0.865, 0.023, 0.688,
        0.858, 0.263, 0.192,
        0.142, 0.090, 0.879,
        0.341, 0.376, 0.657,
        0.989, 0.596, 0.614,
        0.994, 0.993, 0.795,
        0.005, 0.525, 0.593,
        0.999, 0.407, 0.415,
        0.606, 0.202, 0.626,
        0.807, 0.519, 0.092,
        0.509, 0.431, 0.233,
        0.631, 0.864, 0.010,
        0.910, 0.775, 0.421,
        0.714, 0.196, 0.274,
        0.140, 0.567, 0.958,
        0.589, 0.676, 0.795,
        0.638, 0.747, 0.757,
        0.527, 0.844, 0.994,
        0.664, 0.873, 0.424,
        0.512, 0.238, 0.106,
        0.823, 0.384, 0.002,
        0.989, 0.031, 0.386,
        0.768, 0.141, 0.602,
        0.340, 0.213, 0.979,
        0.626, 0.237, 0.726,
        0.268, 0.834, 0.249,
        0.992, 0.047, 0.505,
        0.032, 0.667, 0.099,
        0.110, 0.965, 0.862,
        0.455, 0.938, 0.849,
        0.764, 0.732, 0.981,
        0.344, 0.579, 0.691,
        0.114, 0.046, 0.997,
        0.530, 0.938, 0.088,
        0.763, 0.595, 0.168,
        0.562, 0.918, 0.125,
        0.303, 0.332, 0.201,
        0.036, 0.129, 0.776,
        0.032, 0.837, 0.734,
        0.273, 0.858, 0.054,
        0.873, 0.550, 0.675,
        0.851, 0.126, 0.940,
        0.176, 0.782, 0.056,
        0.791, 0.546, 0.171,
        0.020, 0.300, 0.649,
        0.158, 0.864, 0.692,
        0.913, 0.809, 0.189,
        0.151, 0.818, 0.696,
        0.934, 0.232, 0.698,
        0.633, 0.916, 0.892,
        0.038, 0.309, 0.665,
        0.259, 0.884, 0.519,
        0.933, 0.034, 0.806,
        0.431, 0.724, 0.110,
        0.486, 0.994, 0.524,
        0.241, 0.991, 0.093,
        0.478, 0.091, 0.881,
        0.852, 0.717, 0.042,
        0.512, 0.204, 0.684,
        0.165, 0.158, 0.258,
        0.302, 0.224, 0.494,
        0.258, 0.448, 0.964,
        0.122, 0.195, 0.171,
        0.046, 0.792, 0.087,
        0.754, 0.679, 0.779,
        0.956, 0.283, 0.945,
        0.438, 0.353, 0.739,
        0.943, 0.602, 0.713,
        0.583, 0.602, 0.180,
        0.545, 0.689, 0.947,
        0.781, 0.542, 0.595,
        0.559, 0.115, 0.048,
        0.805, 0.964, 0.899,
        0.799, 0.582, 0.275,
        0.952, 0.219, 0.503,
        0.930, 0.757, 0.377,
        0.982, 0.824, 0.189,
        0.739, 0.772, 0.453,

    ]).astype(np.float32).reshape(-1, 3)


def random_color(rgb=False, maximum=255):
    """
    Args:
        rgb (bool): whether to return RGB colors or BGR colors.
        maximum (int): either 255 or 1

    Returns:
        ndarray: a vector of 3 numbers
    """
    idx = np.random.randint(0, len(COLORS))
    ret = COLORS[idx] * maximum
    if not rgb:
        ret = ret[::-1]
    return ret
